#!/usr/bin/env just --justfile

set shell := ["bash", "-c"]

# --- Create Natural Earth extracts

# https://www.naturalearthdata.com/downloads/
# Version 5.1.2

dl := "download"
ne_gpkg := dl + "/packages/natural_earth_vector.gpkg"
data := "../docs/data"

# Download NE data and extract layers
create-extracts: download-ne (create-extract "4326" data + "/ne_extracts_4326.gpkg") (create-extract "3857" data + "/ne_extracts_3857.gpkg") (create-extract "8857" data + "/ne_extracts_8857.gpkg") (create-extract "8858" data + "/ne_extracts_8858.gpkg") (create-extract "8859" data + "/ne_extracts_8859.gpkg")

download-ne:
    mkdir -p {{dl}}
    cd {{dl}}; test -f natural_earth_vector.gpkg.zip || wget https://naciscdn.org/naturalearth/packages/natural_earth_vector.gpkg.zip
    cd {{dl}}; test -f packages/natural_earth_vector.gpkg || unzip natural_earth_vector.gpkg.zip

create-extract srid gpkg:
    rm -f {{gpkg}}
    mkdir -p {{data}}
    ogr2ogr {{gpkg}} -t_srs EPSG:{{srid}} -nlt PROMOTE_TO_MULTI -nln ne_10m_admin_0_countries {{ne_gpkg}} ne_10m_admin_0_countries_deu
    ogr2ogr {{gpkg}} -update -t_srs EPSG:{{srid}} -nln ne_10m_admin_0_country_points -nlt POINT -dialect sqlite -sql "SELECT name, abbrev, ST_Centroid(geom) AS geom from ne_10m_admin_0_map_units" {{ne_gpkg}}
    ogr2ogr {{gpkg}} -update -t_srs EPSG:{{srid}} -nlt PROMOTE_TO_MULTI {{ne_gpkg}} ne_10m_admin_0_boundary_lines_land
    ogr2ogr {{gpkg}} -update -t_srs EPSG:{{srid}} -nlt PROMOTE_TO_MULTI {{ne_gpkg}} ne_10m_admin_1_states_provinces_lines
    ogr2ogr {{gpkg}} -update -t_srs EPSG:{{srid}} -nlt PROMOTE_TO_MULTI -where "featurecla!='Date line'" {{ne_gpkg}} ne_10m_geographic_lines
    ogr2ogr {{gpkg}} -update -t_srs EPSG:{{srid}} -nlt PROMOTE_TO_MULTI -where "featurecla!='Date line'" {{ne_gpkg}} ne_50m_geographic_lines
    ogr2ogr {{gpkg}} -update -t_srs EPSG:{{srid}} -select scalerank,featurecla,name -nlt PROMOTE_TO_MULTI {{ne_gpkg}} ne_10m_rivers_lake_centerlines
    ogr2ogr {{gpkg}} -update -t_srs EPSG:{{srid}} -select scalerank,featurecla,name -nlt PROMOTE_TO_MULTI {{ne_gpkg}} ne_10m_lakes
    ogr2ogr {{gpkg}} -update -t_srs EPSG:{{srid}} -select scalerank,labelrank,featurecla,name {{ne_gpkg}} ne_10m_populated_places


# --- Create PostGIS DB for BBOX

export PGUSER := "equalearth"
export PGPASSWORD := "equalearth"
export PGDATABASE := "equalearth"
export PGHOST := "localhost"
export PGPORT := "5439"
dockername := "equalearthdb"

export BBOX_MAPSERVER__NUM_FCGI_PROCESSES := "1"

# Start database
start-db: start-docker-db db-is-ready

# Start database
[private]
start-docker-db:
    docker run -p 127.0.0.1:{{PGPORT}}:5432 -e POSTGRES_USER={{PGUSER}} -e POSTGRES_PASSWORD={{PGPASSWORD}} -d --name {{dockername}} postgis/postgis:16-3.4

# Stop database
stop-db:
    docker stop {{dockername}}

# Wait for the test database to be ready
[private]
db-is-ready:
    docker exec {{dockername}} sh -c 'until pg_isready -h localhost -U postgres; do sleep 1; done'

# Setup DB and import data
create-extracts-db: create-db (import-extract "ne_4326" data + "/ne_extracts_4326.gpkg") (import-extract "ne_3857" data + "/ne_extracts_3857.gpkg") (import-extract "ne_8857" data + "/ne_extracts_8857.gpkg") (import-extract "ne_8858" data + "/ne_extracts_8858.gpkg") (import-extract "ne_8859" data + "/ne_extracts_8859.gpkg")

# Create database
create-db:
    PGDATABASE=postgres psql -c "DROP DATABASE IF EXISTS {{PGDATABASE}}"
    PGDATABASE=postgres psql -c "CREATE DATABASE {{PGDATABASE}}"
    psql -c "CREATE EXTENSION postgis"

import-extract schema gpkg:
    psql -c "CREATE SCHEMA IF NOT EXISTS {{schema}}"
    ogr2ogr -f PostgreSQL "PG:dbname={{PGDATABASE}}" -lco GEOMETRY_NAME=wkb_geometry -lco SCHEMA={{schema}} {{gpkg}}

# Seed tiles
seed srid:
    bbox-tile-server --config=bbox-ne_extracts_{{srid}}.toml seed --tile-path=../docs/tiles/ne_extracts_{{srid}} --tileset ne_countries --maxzoom 6

# Seed tiles (Mercator)
seed-3857: (seed "3857")

seed-all: (seed "3857") (seed "8857") (seed "8858") (seed "8859") (seed "4326")

# Run bbox tile server
serve srid:
    bbox-tile-server --config=bbox-ne_extracts_{{srid}}.toml --loglevel debug serve

# Run bbox tile server (Mercator)
serve-merc: (serve "3857")

# Run bbox tile server (Equal Earth)
serve-eq: (serve "8857")

tilejson:
    # just serve-merc
    curl -s http://localhost:8080/xyz/ne_countries.json | jq . | sed 's!http://localhost:8080/xyz!https://assets.bbox.earth/tiles/ne_extracts_3857!g' > ../docs/tiles/ne_extracts_3857/ne_countries.json
    test -d ../docs/tiles/ne_extracts_8857 && sed s/3857/8857/g ../docs/tiles/ne_extracts_3857/ne_countries.json >../docs/tiles/ne_extracts_8857/ne_countries.json
    test -d ../docs/tiles/ne_extracts_8858 && sed s/3857/8858/g ../docs/tiles/ne_extracts_3857/ne_countries.json >../docs/tiles/ne_extracts_8858/ne_countries.json
    test -d ../docs/tiles/ne_extracts_8859 && sed s/3857/8859/g ../docs/tiles/ne_extracts_3857/ne_countries.json >../docs/tiles/ne_extracts_8859/ne_countries.json
    test -d ../docs/tiles/ne_extracts_4326 && sed s/3857/4326/g ../docs/tiles/ne_extracts_3857/ne_countries.json >../docs/tiles/ne_extracts_4326/ne_countries.json
